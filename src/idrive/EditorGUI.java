/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package idrive;

import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import javax.swing.TransferHandler;
import java.net.URL;
import java.net.MalformedURLException;
import java.util.ArrayList;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Tsuka
 */
public class EditorGUI extends javax.swing.JFrame {
	public final static int COLUMN_NO = 0;
	public final static int COLUMN_TITLE = 1;
	public final static int COLUMN_ARTIST = 2;
	public final static int COLUMN_ALBUM = 3;
	public final static int COLUMN_ARTWORK = 4;

	private MusicCollection list;
	private ArtworkManager  manager;
	private String selection;

	/**
	 * Creates new form IDriveGUI
	 */
	public EditorGUI() {
		list = new MusicCollection();
		initComponents();

		// Artworkラベルのアイコンを更新する
		String location = "/idrive/image/BMW_logo.jpg";
                URL resource = getClass().getResource(location);
		manager = new ArtworkManager(artwork);
                manager.update(resource);

		// ドロップ操作を有効にする
		artwork.setTransferHandler(new DropImageFileHandler(manager));
		checkin.setTransferHandler(new DropMusicFileHandler(list, playlist));

		// セルの編集操作を監視する
		selection = null;
		playlist.getModel().addTableModelListener(
			new TableModelListener() {
				public void tableChanged(TableModelEvent te) {
					int row = te.getLastRow(); // セルの行位置を取得
					int col = te.getColumn(); // セルの列位置を取得
					if (te.getType() == TableModelEvent.UPDATE) {
						String before = selection;
						String after = (String)playlist.getValueAt(row, col);
						if (before.equals(after)) {
							System.out.printf("編集完了: (%d, %d) %s 【変更なし】\n",
							row, col, before, after);
						} else {
							System.out.printf("編集完了: (%d, %d) %s -> %s\n",
							row, col, before, after);
							// update(row, col);
						}
						selection = after;
					}
				}
			}
		);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
	 * method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jPanel4 = new javax.swing.JPanel();
                jPanel5 = new javax.swing.JPanel();
                checkin = new javax.swing.JLabel();
                jPanel6 = new javax.swing.JPanel();
                artwork = new javax.swing.JLabel();
                jPanel3 = new javax.swing.JPanel();
                jScrollPane1 = new javax.swing.JScrollPane();
                playlist = new javax.swing.JTable();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("BMW IDRIVE EDITOR");
                setForeground(java.awt.Color.black);
                getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

                jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

                checkin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                checkin.setText("[ここに楽曲ファイルをドロップしてください]");
                checkin.setBorder(javax.swing.BorderFactory.createEtchedBorder());

                javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
                jPanel5.setLayout(jPanel5Layout);
                jPanel5Layout.setHorizontalGroup(
                        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(checkin, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                );
                jPanel5Layout.setVerticalGroup(
                        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(checkin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                jPanel4.add(jPanel5);

                jPanel6.setMaximumSize(new java.awt.Dimension(150, 150));
                jPanel6.setMinimumSize(new java.awt.Dimension(150, 150));

                artwork.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                artwork.setToolTipText("");
                artwork.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                artwork.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
                artwork.setMaximumSize(new java.awt.Dimension(150, 150));
                artwork.setMinimumSize(new java.awt.Dimension(150, 150));
                artwork.setPreferredSize(new java.awt.Dimension(150, 150));

                javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
                jPanel6.setLayout(jPanel6Layout);
                jPanel6Layout.setHorizontalGroup(
                        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addComponent(artwork, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                );
                jPanel6Layout.setVerticalGroup(
                        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(artwork, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                jPanel4.add(jPanel6);

                getContentPane().add(jPanel4);

                jPanel3.setPreferredSize(new java.awt.Dimension(600, 300));

                playlist.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "No.", "曲名", "アーティスト名", "アルバム名"
                        }
                ) {
                        Class[] types = new Class [] {
                                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                        };
                        boolean[] canEdit = new boolean [] {
                                false, true, true, true
                        };

                        public Class getColumnClass(int columnIndex) {
                                return types [columnIndex];
                        }

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                playlist.setMaximumSize(new java.awt.Dimension(2147483647, 260));
                playlist.setMinimumSize(new java.awt.Dimension(60, 260));
                playlist.setPreferredSize(new java.awt.Dimension(300, 260));
                playlist.getTableHeader().setReorderingAllowed(false);
                playlist.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                playlistMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(playlist);
                if (playlist.getColumnModel().getColumnCount() > 0) {
                        playlist.getColumnModel().getColumn(0).setMinWidth(30);
                        playlist.getColumnModel().getColumn(0).setPreferredWidth(30);
                        playlist.getColumnModel().getColumn(0).setMaxWidth(30);
                        playlist.getColumnModel().getColumn(1).setPreferredWidth(240);
                }

                javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
                jPanel3.setLayout(jPanel3Layout);
                jPanel3Layout.setHorizontalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                );
                jPanel3Layout.setVerticalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                );

                getContentPane().add(jPanel3);

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void playlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playlistMouseClicked
                // TODO add your handling code here:
		int row = playlist.getSelectedRow();
		int col = playlist.getSelectedColumn();
		switch (col) {
		case -1:
			break;
		case COLUMN_NO:
			int vInt = (int)playlist.getValueAt(row, col);
			System.out.printf("セル選択: (%d, %d) %d\n", row, col, vInt);
			break;
		default:
			String vString = (String)playlist.getValueAt(row, col);
			System.out.printf("セル選択: (%d, %d) %s\n", row, col, vString);
			selection = vString;
		}
		return;
        }//GEN-LAST:event_playlistMouseClicked

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(EditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(EditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(EditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(EditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new EditorGUI().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel artwork;
        private javax.swing.JLabel checkin;
        private javax.swing.JPanel jPanel3;
        private javax.swing.JPanel jPanel4;
        private javax.swing.JPanel jPanel5;
        private javax.swing.JPanel jPanel6;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTable playlist;
        // End of variables declaration//GEN-END:variables
}
